// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SbuBot.Models;

namespace SbuBot.Migrations
{
    [DbContext(typeof(SbuDbContext))]
    [Migration("20210521092918_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SbuBot.Models.SbuColorRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<ulong>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("ColorRoles");
                });

            modelBuilder.Entity("SbuBot.Models.SbuMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.ToTable("Members");
                });

            modelBuilder.Entity("SbuBot.Models.SbuNicknameLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<ulong>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("NicknameLogs");
                });

            modelBuilder.Entity("SbuBot.Models.SbuReminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<long>("DueAt")
                        .HasColumnType("bigint");

                    b.Property<long>("IsDispatched")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<ulong>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("SbuBot.Models.SbuTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<ulong>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("SbuBot.Models.SbuColorRole", b =>
                {
                    b.HasOne("SbuBot.Models.SbuMember", "Owner")
                        .WithOne("ColorRole")
                        .HasForeignKey("SbuBot.Models.SbuColorRole", "OwnerId")
                        .HasPrincipalKey("SbuBot.Models.SbuMember", "DiscordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SbuBot.Models.SbuNicknameLog", b =>
                {
                    b.HasOne("SbuBot.Models.SbuMember", "Owner")
                        .WithMany("Nicknames")
                        .HasForeignKey("OwnerId")
                        .HasPrincipalKey("DiscordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SbuBot.Models.SbuReminder", b =>
                {
                    b.HasOne("SbuBot.Models.SbuMember", "Owner")
                        .WithMany("Reminders")
                        .HasForeignKey("OwnerId")
                        .HasPrincipalKey("DiscordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SbuBot.Models.SbuTag", b =>
                {
                    b.HasOne("SbuBot.Models.SbuMember", "Owner")
                        .WithMany("Tags")
                        .HasForeignKey("OwnerId")
                        .HasPrincipalKey("DiscordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SbuBot.Models.SbuMember", b =>
                {
                    b.Navigation("ColorRole");

                    b.Navigation("Nicknames");

                    b.Navigation("Reminders");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
