// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SbuBot.Models;

namespace SbuBot.Migrations
{
    [DbContext(typeof(SbuDbContext))]
    [Migration("20210711092632_GuildUniqueRelationFix")]
    partial class GuildUniqueRelationFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SbuBot.Models.SbuColorRole", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<ulong?>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id", "GuildId");

                    b.HasIndex("GuildId");

                    b.HasIndex("OwnerId", "GuildId")
                        .IsUnique();

                    b.ToTable("ColorRoles");
                });

            modelBuilder.Entity("SbuBot.Models.SbuGuild", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<byte>("Config")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("SbuBot.Models.SbuMember", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id", "GuildId");

                    b.HasIndex("GuildId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("SbuBot.Models.SbuReminder", b =>
                {
                    b.Property<ulong>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<long>("DueAt")
                        .HasColumnType("bigint");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Message")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<ulong?>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("MessageId");

                    b.HasIndex("GuildId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("OwnerId", "GuildId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("SbuBot.Models.SbuTag", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<ulong?>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Name", "GuildId");

                    b.HasIndex("GuildId");

                    b.HasIndex("Name");

                    b.HasIndex("OwnerId");

                    b.HasIndex("OwnerId", "GuildId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("SbuBot.Models.SbuColorRole", b =>
                {
                    b.HasOne("SbuBot.Models.SbuGuild", "Guild")
                        .WithMany("ColorRoles")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SbuBot.Models.SbuMember", "Owner")
                        .WithOne("ColorRole")
                        .HasForeignKey("SbuBot.Models.SbuColorRole", "OwnerId", "GuildId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Guild");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SbuBot.Models.SbuMember", b =>
                {
                    b.HasOne("SbuBot.Models.SbuGuild", "Guild")
                        .WithMany("Members")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("SbuBot.Models.SbuReminder", b =>
                {
                    b.HasOne("SbuBot.Models.SbuGuild", "Guild")
                        .WithMany("Reminders")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SbuBot.Models.SbuMember", "Owner")
                        .WithMany("Reminders")
                        .HasForeignKey("OwnerId", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Guild");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SbuBot.Models.SbuTag", b =>
                {
                    b.HasOne("SbuBot.Models.SbuGuild", "Guild")
                        .WithMany("Tags")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SbuBot.Models.SbuMember", "Owner")
                        .WithMany("Tags")
                        .HasForeignKey("OwnerId", "GuildId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Guild");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SbuBot.Models.SbuGuild", b =>
                {
                    b.Navigation("ColorRoles");

                    b.Navigation("Members");

                    b.Navigation("Reminders");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("SbuBot.Models.SbuMember", b =>
                {
                    b.Navigation("ColorRole");

                    b.Navigation("Reminders");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
